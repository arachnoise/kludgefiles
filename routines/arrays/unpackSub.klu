0000	0100001E 		prep  for  unpack  of  1st  value
0001	020000DF
0002	01200021
0003	020000E0
0004	0100001D
0005	06200008
0006	020000E1
0007	042000C4
0008	0100001F 		prep  for  unpack  of  2nd  value
0009	020000DF
000A	01200041
000B	020000E0
000C	0100001D
000D	06200010
000E	020000E1
000F	042000C4
0010	01200021
0011	020000AD
0012	01200041
0013	020000AE
0014	01200061
0015	020000AF
0016	01000020
0017	020000B0
0018	0100001D
0019	0620001C
001A	020000B1
001B	04200081
001C	08000000
001D	04200000 		jump  instruction  code
001E	00000007 		packed  Value  1
001F	00000008 		packed  Value  2
0020	00000020
0021	00000000
0022	00000000
0023	00000000
0024	00000000
0025	00000000
0026	00000000
0027	00000000
0028	00000000
0029	00000000
002A	00000000
002B	00000000
002C	00000000
002D	00000000
002E	00000000
002F	00000000
0030	00000000
0031	00000000
0032	00000000
0033	00000000
0034	00000000
0035	00000000
0036	00000000
0037	00000000
0038	00000000
0039	00000000
003A	00000000
003B	00000000
003C	00000000
003D	00000000
003E	00000000
003F	00000000
0040	00000000
0041	00000000
0042	00000000
0043	00000000
0044	00000000
0045	00000000
0046	00000000
0047	00000000
0048	00000000
0049	00000000
004A	00000000
004B	00000000
004C	00000000
004D	00000000
004E	00000000
004F	00000000
0050	00000000
0051	00000000
0052	00000000
0053	00000000
0054	00000000
0055	00000000
0056	00000000
0057	00000000
0058	00000000
0059	00000000
005A	00000000
005B	00000000
005C	00000000
005D	00000000
005E	00000000
005F	00000000
0060	00000000
0061	00000000
0062	00000000
0063	00000000
0064	00000000
0065	00000000
0066	00000000
0067	00000000
0068	00000000
0069	00000000
006A	00000000
006B	00000000
006C	00000000
006D	00000000
006E	00000000
006F	00000000
0070	00000000
0071	00000000
0072	00000000
0073	00000000
0074	00000000
0075	00000000
0076	00000000
0077	00000000
0078	00000000
0079	00000000
007A	00000000
007B	00000000
007C	00000000
007D	00000000
007E	00000000
007F	00000000
0080	00000000
0081	01200000
0082	020000B2 		  zero  out  carry  bit
0083	010000B0 		  return  if  no  bits  to  add
0084	05200086
0085	042000B1
0086	0620FFFF
0087	020000B0 		  decrement  bit  counter
0088	01200000 		  zero  out  table  index
0089	020000B3
008A	014000AD
008B	0520008D 		  if  minuend  is  1  then
008C	04200090 		  add  4  to  table  index
008D	010000B3
008E	06200004
008F	020000B3
0090	014000AE
0091	05200093 		  if  subtrahend  is  1  then
0092	04200096 		  add  2  to  table  index
0093	010000B3
0094	06200002
0095	020000B3
0096	010000B2
0097	05200099 		  if  carry  bit  is  1  then
0098	0420009C 		  add  1  to  table  index
0099	010000B3
009A	06200001
009B	020000B3
009C	030000B3
009D	018000B4 		  look  up  result  table[table  index]
009E	024000AF 		  assign  to  result
009F	018000BC 		  look  up  carry  table[table  index]
00A0	020000B2 		  assign  to  carry  bit
00A1	010000AD 		  update  pointer  to  minuend
00A2	06200001
00A3	020000AD
00A4	010000AE 		  update  pointer  to  subtrahend
00A5	06200001
00A6	020000AE
00A7	010000AF 		  update  pointer  to  result
00A8	06200001
00A9	020000AF
00AA	010000B0
00AB	05200086
00AC	042000B1
00AD	00000000 		  in  -  pointer  to  minuend
00AE	00000000 		  in  -  pointer  to  subtrahend
00AF	00000000 		  out  -  pointer  to  result
00B0	00000000 		  in
00B1	00000000 		  in
00B2	00000000
00B3	00000000
00B4	00000000
00B5	00000001
00B6	00000001
00B7	00000000
00B8	00000001
00B9	00000000
00BA	00000000
00BB	00000001 		consult  truth  table  above  for  details
00BC	00000000
00BD	00000001
00BE	00000001
00BF	00000001
00C0	00000000
00C1	00000000
00C2	00000000
00C3	00000001
00C4	01200000
00C5	020000DD
00C6	01200020 		number  of  bits  in  an  addressed  value
00C7	0620FFFF
00C8	020000DE 		update  distance  from  big  (left)  end  of  value
00C9	010000DF 		get  bit
00CA	070000DE
00CB	052000CE
00CC	01200000 		store  bit  in  accumulator
00CD	042000D3
00CE	0120FFFF
00CF	070000DD 		if  set  -  clear  this  bit
00D0	060000DF
00D1	020000DF
00D2	01200001 		store  bit  in  accumulator
00D3	024000E0 		store  in  unpacked  value
00D4	010000E0 		increment  pointer  address
00D5	06200001
00D6	020000E0
00D7	010000DD 		update  current  position
00D8	06200001
00D9	020000DD
00DA	010000DE 		if  more  bits  to  shift
00DB	052000C7 		end  of  loop
00DC	042000E1
00DD	00000000
00DE	00000000
00DF	00000000 		value  to  unpack
00E0	00000000 		pointer  to  unpacked  Value
00E1	00000000 		return  to  specified  address

99999
001E 001F  0021 0022 0023 0024 0041 0042 0043 0044 0061 0062 0063 0064