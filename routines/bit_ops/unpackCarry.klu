0000	0100002D
0001	020000CE
0002	0120002F
0003	020000CF
0004	01200008
0005	0600002B
0006	020000CD
0007	042000B3
0008	0100002E
0009	020000CE
000A	0120004F
000B	020000CF
000C	01200010
000D	0600002B
000E	020000CD
000F	042000B3
0010	0100002C
0011	0200008C
0012	0120004F
0013	0200008A
0014	0120002F
0015	0200008B
0016	0120001A
0017	0600002B
0018	02000089
0019	0420006F
001A	0120002F
001B	020000B0
001C	01200020
001D	0600002B
001E	020000AE
001F	0420009E
0020	010000AF
0021	0200002D
0022	0120004F
0023	020000B0
0024	01200028
0025	0600002B
0026	020000AE
0027	0420009E
0028	010000AF
0029	0200002E
002A	08000000
002B	04200000
002C	00000008 		toShift
002D	00000000 		myArray
002E	FFF00000
002F	00000000 		myBuf1
0030	00000000
0031	00000000
0032	00000000
0033	00000000
0034	00000000
0035	00000000
0036	00000000
0037	00000000
0038	00000000
0039	00000000
003A	00000000
003B	00000000
003C	00000000
003D	00000000
003E	00000000
003F	00000000
0040	00000000
0041	00000000
0042	00000000
0043	00000000
0044	00000000
0045	00000000
0046	00000000
0047	00000000
0048	00000000
0049	00000000
004A	00000000
004B	00000000
004C	00000000
004D	00000000
004E	00000000
004F	00000000 		myBuf2
0050	00000000
0051	00000000
0052	00000000
0053	00000000
0054	00000000
0055	00000000
0056	00000000
0057	00000000
0058	00000000
0059	00000000
005A	00000000
005B	00000000
005C	00000000
005D	00000000
005E	00000000
005F	00000000
0060	00000000
0061	00000000
0062	00000000
0063	00000000
0064	00000000
0065	00000000
0066	00000000
0067	00000000
0068	00000000
0069	00000000
006A	00000000
006B	00000000
006C	00000000
006D	00000000
006E	00000000
006F	0100008C
0070	05200072
0071	04200089
0072	0200009B
0073	0100002B
0074	06200077
0075	0200009A
0076	0420008E
0077	06200020
0078	0200008D
0079	0100008A 		carry  bits  are  in  index  offset:  size  -  toShift
007A	0600008D 		update  pointer  accordingly
007B	0200008A
007C	0140008A
007D	0240008B
007E	0100008A
007F	06200001
0080	0200008A
0081	0100008B
0082	06200001
0083	0200008B
0084	0100008D
0085	06200001
0086	0200008D
0087	0620FFE0
0088	0520007C
0089	00000000
008A	00000000
008B	00000000
008C	00000000
008D	00000000
008E	0100009B
008F	0200009C
0090	01200020
0091	0620FFFF
0092	0200009D
0093	0100009B
0094	07200001
0095	0600009C
0096	0200009B
0097	0100009D
0098	05200091
0099	0100009B
009A	00000000
009B	00000000 		Nvalue
009C	00000000 		N  old  value
009D	00000000 		N  counter
009E	01200000
009F	020000B1
00A0	01200000
00A1	020000AF
00A2	014000B0 		retrieve  bit  at  indexed  location
00A3	070000B1 		shift  to  its  proper  position
00A4	060000AF 		pack  into  the  result
00A5	020000AF 		and  save  it
00A6	010000B0
00A7	06200001
00A8	020000B0
00A9	010000B1
00AA	06200001
00AB	020000B1 		update  position
00AC	060000B2 		is  PKcurrPos  less  than  32  (PKlimit)?
00AD	052000A2
00AE	00000000
00AF	00000000
00B0	00000000
00B1	00000000
00B2	FFFFFFE0 		PKlimit
00B3	010000CE
00B4	020000D2
00B5	01200000
00B6	020000D0
00B7	01200020 		number  of  bits  in  an  addressed  value
00B8	0620FFFF
00B9	020000D1 		update  distance  from  big  (left)  end  of  value
00BA	010000D2 		get  bit
00BB	070000D1
00BC	052000BF
00BD	01200000 		store  bit  in  accumulator
00BE	042000C4
00BF	0120FFFF
00C0	070000D0 		if  set  -  clear  this  bit
00C1	060000D2
00C2	020000D2
00C3	01200001 		store  bit  in  accumulator
00C4	024000CF
00C5	010000CF
00C6	06200001
00C7	020000CF
00C8	010000D0 		update  UPcurrPos
00C9	06200001
00CA	020000D0
00CB	010000D1 		if  more  bits  to  shift
00CC	052000B8 		start  over
00CD	00000000
00CE	00000000 		packed  Value
00CF	00000000
00D0	00000000
00D1	00000000
00D2	00000000 		working  value

99999
002C 002D 002E