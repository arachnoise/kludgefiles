0000	0100001B
0001	020000B6
0002	0120001D
0003	020000B7
0004	01200008
0005	06000019
0006	020000B5
0007	0420009B
0008	0100001A
0009	02000074
000A	0120001D
000B	02000073
000C	01000019
000D	06200010
000E	02000072
000F	0420003D
0010	0120001D
0011	02000098
0012	01200016
0013	06000019
0014	02000096
0015	04200088
0016	01000097
0017	0200001C
0018	08000000
0019	04200000 		jmp  command  base  value
001A	00000021 		to  shift
001B	00000049 		my  value  1
001C	00000000 		my  value  2
001D	00000000
001E	00000000
001F	00000000
0020	00000001
0021	00000000
0022	00000000
0023	00000001
0024	00000000
0025	00000000
0026	00000001
0027	00000000
0028	00000000
0029	00000001
002A	00000000
002B	00000000
002C	00000000
002D	00000000
002E	00000000
002F	00000000
0030	00000000
0031	00000000
0032	00000000
0033	00000000
0034	00000000
0035	00000000
0036	00000000
0037	00000000
0038	00000000
0039	00000000
003A	00000000
003B	00000000
003C	00000000
003D	01000074
003E	05200040
003F	04200072 		zero  case
0040	0620FFE0
0041	05200043 		max  case
0042	04200064
0043	020000D1
0044	01000019
0045	06200048
0046	020000D2
0047	042000BB
0048	010000D1 		if  0  then  shift  amount  too  big!
0049	0520004B
004A	04200072
004B	01000074
004C	02000085
004D	01200051
004E	06000019
004F	02000084
0050	04200078
0051	06200020 		Negate's  Nvalue  is  in  accumulator  now
0052	02000075 		index  is  (size  -  toShift)
0053	0620FFFF 		arrays  are  zero  indexed  so  offset  it  by  one
0054	06000073
0055	02000076
0056	06000074
0057	02000077
0058	01400076 		shift  goes  here
0059	02400077
005A	01000076
005B	0620FFFF
005C	02000076
005D	01000077
005E	0620FFFF
005F	02000077
0060	01000075
0061	0620FFFF
0062	02000075
0063	05200058
0064	01000074
0065	02000075
0066	0620FFFF
0067	06000073
0068	02000077
0069	01200000
006A	02400077
006B	01000077
006C	0620FFFF
006D	02000077
006E	01000075
006F	0620FFFF
0070	02000075
0071	05200069
0072	00000000 		USHreturn
0073	00000000 		USHbufPtr
0074	00000000
0075	00000000 		USHindex
0076	00000000 		USHsrcPtr
0077	00000000 		USHdestPtr
0078	01000085
0079	02000086
007A	01200020
007B	0620FFFF
007C	02000087
007D	01000085
007E	07200001
007F	06000086
0080	02000085
0081	01000087
0082	0520007B
0083	01000085
0084	00000000
0085	00000000 		Nvalue
0086	00000000 		N  old  value
0087	00000000 		N  counter
0088	01200000
0089	02000099
008A	01400098 		retrieve  bit  at  indexed  location
008B	07000099 		shift  to  its  proper  position
008C	06000097 		pack  into  the  result
008D	02000097 		and  save  it
008E	01000098
008F	06200001
0090	02000098
0091	01000099
0092	06200001
0093	02000099 		update  position
0094	0600009A 		is  PKcurrPos  less  than  32  (PKlimit)?
0095	0520008A
0096	00000000
0097	00000000
0098	00000000
0099	00000000
009A	FFFFFFE0 		PKlimit
009B	010000B6
009C	020000BA
009D	01200000
009E	020000B8
009F	01200020 		number  of  bits  in  an  addressed  value
00A0	0620FFFF
00A1	020000B9 		update  distance  from  big  (left)  end  of  value
00A2	010000BA 		get  bit
00A3	070000B9
00A4	052000A7
00A5	01200000 		store  bit  in  accumulator
00A6	042000AC
00A7	0120FFFF
00A8	070000B8 		if  set  -  clear  this  bit
00A9	060000BA
00AA	020000BA
00AB	01200001 		store  bit  in  accumulator
00AC	024000B7
00AD	010000B7
00AE	06200001
00AF	020000B7
00B0	010000B8 		update  UPcurrPos
00B1	06200001
00B2	020000B8
00B3	010000B9 		if  more  bits  to  shift
00B4	052000A0 		start  over
00B5	00000000
00B6	00000000 		packed  Value
00B7	00000000
00B8	00000000
00B9	00000000
00BA	00000000 		working  value
00BB	0120001F
00BC	020000CF
00BD	01200000
00BE	020000D0
00BF	010000D1
00C0	070000CF 		shl
00C1	052000C3
00C2	042000C7
00C3	0120FFFF
00C4	070000D0
00C5	060000D1
00C6	020000D1
00C7	010000D0
00C8	06200001
00C9	020000D0
00CA	010000CF
00CB	0620FFFF
00CC	020000CF
00CD	052000BF
00CE	042000D2
00CF	00000000 		position  relative  to  HO  bit
00D0	00000000 		position  relative  to  LO  bit
00D1	00000000 		NTtoTest
00D2	00000000 		NTtoReturn

99999
001A 001B 001C